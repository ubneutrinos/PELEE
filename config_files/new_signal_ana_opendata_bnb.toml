[persistence]
output_dir = "./full_ana_output/"

[plotting]
[plotting.NPBDT_SHR_E]
run_title = "OD Runs 4-5"
[plotting.ZPBDT_SHR_E]
run_title = "OD Runs 4-5"
[plotting.NPBDT_SHR_COSTHETA]
run_title = "OD Runs 4-5"
[plotting.ZPBDT_SHR_COSTHETA]
run_title = "OD Runs 4-5"
[plotting.NUMUCRTNP0PI]
run_title = "Runs 3-5"
[plotting.NUMUCRT0P0PI]
run_title = "Runs 3-5"
[plotting.TWOSHR]
run_title = "Runs 3-5"

[channels]
signal_channels = ["NPBDT_SHR_E", "ZPBDT_SHR_E"]
constraint_channels = ["NUMUCRTNP0PI", "NUMUCRT0P0PI", "TWOSHR"]

[[h0_params]]
name = "signal_strength"
value = 0.0

[[h1_params]]
name = "signal_strength"
value = 1.0

[fc_scan]
parameter_name = "signal_strength"
range = [0, 5]
n_points = 40

[[fc_scan.fit_grid]]
parameter = "signal_strength"
range = [0, 10]
n_points = 100

[uncertainty_defaults]
include_multisim_errors = true
add_ext_error_floor = false
use_sideband = true

# ------ Muon Sideband Generator ----- 
[[generator]]
[generator.load_runs]
# TODO: Run 3_crt detvars do not have CRT yet, the code is using run 4 to compute
# detvars for run 3_crt
run_numbers = ["3_crt", "4d","5"]
# run_numbers = ["4d"]
data = "muon_sideband"
truth_filtered_sets = ["nue", "drt"]
loadshowervariables = false
loadsystematics = true
use_bdt = false
loadnumuvariables = true
load_crt_vars = true
numupresel = true
enable_cache = true
blinded = false

[generator.detvars]
# Only arguments that are to be overridden for detvars need to be 
# repeated here, otherwise all arguments from load_runs will be 
# copied over.
truth_filtered_sets = ["nue","nc_pi0"]

[[generator.channel]]
variable = "neutrino_energy"
n_bins = 14
limits = [0.15, 1.55]
selection = "NUMUCRTNP0PI"
preselection = "NUMUCRT"
variable_tex = "Neutrino Reconstructed Energy (GeV)"
variable_tex_short = "$E_{\\nu,\\mathrm{reco}}$"

[[generator.channel]]
variable = "neutrino_energy"
n_bins = 14
limits = [0.15, 1.55]
selection = "NUMUCRT0P0PI"
preselection = "NUMUCRT"
variable_tex = "Neutrino Reconstructed Energy (GeV)"
variable_tex_short = "$E_{\\nu,\\mathrm{reco}}$"

# Adding the inclusive $\nu_\mu$ selection channel even though
# it is not used by default. This allows us to quickly compare
# the old and new selections without having to reload the entire
# analysis twice, by simply setting the `constraint_channels` 
# property at runtime.
[[generator.channel]]
variable = "neutrino_energy"
n_bins = 14
limits = [0.15, 1.55]
selection = "NUMUCRT"
preselection = "NUMUCRT"
variable_tex = "Neutrino Reconstructed Energy (GeV)"

# ------ Two-shower Sideband Generator ----- 
[[generator]]
[generator.load_runs]
# TODO: Run 3_crt detvars do not have CRT yet, the code is using run 4 to compute
# detvars for run 3_crt
run_numbers = ["3_crt", "4d","5"]
# run_numbers = ["4d"]
data = "two_shr_sideband"
truth_filtered_sets = ["nue", "drt"]
loadpi0variables = true
loadshowervariables = true
loadrecoveryvars = false
loadsystematics = true
load_crt_vars = true
load_lee = false
enable_cache = true
blinded = false

[generator.detvars]
# Only arguments that are to be overridden for detvars need to be 
# repeated here, otherwise all arguments from load_runs will be 
# copied over.
truth_filtered_sets = ["nue","nc_pi0"]

[[generator.channel]]
variable = "reco_e"
n_bins = 10
limits = [0.15, 1.0]
selection = "ZPLOOSESELTWOSHR"
preselection = "ZPTwoShrCRT"
label = "TWOSHR"
variable_tex = "Neutrino Reconstructed Energy (GeV)"
variable_tex_short = "$E_{\\mathrm{reco}}$"
selection_tex = "$1e0p$ loose 2+ shower selection"
selection_tex_short = "$1e0p$ 2+shr"


# ------- NUE Signal Generator -------
[[generator]]

mc_hist_generator_cls = "SignalOverBackgroundGenerator"

[generator.load_runs]
# run_numbers = ["1", "2", "3","4b","4c","4d","5"]
run_numbers = ["4b","4c","4d","5"]
data = "opendata_bnb"
truth_filtered_sets = ["nue", "drt"]
loadpi0variables = true
loadshowervariables = true
loadrecoveryvars = true
loadsystematics = true
load_lee = true
use_new_signal_model = true
enable_cache = true
blinded = false

[generator.detvars]
# Only arguments that are to be overridden for detvars need to be 
# repeated here, otherwise all arguments from load_runs will be 
# copied over.
truth_filtered_sets = ["nue","nc_pi0"]
# The full detvars are only calculated for this selection of events
extra_selection_query = "(mcf_pass_ncpi0 == 1 or (abs(nu_pdg) == 12 and ccnc == 0))"
# For the misc. background, we just add a flat fractional covariance
misc_background_query = "not (mcf_pass_ncpi0 == 1 or (abs(nu_pdg) == 12 and ccnc == 0))"
misc_background_error_frac = 0.2

[[generator.parameter]]
name = "signal_strength"
value = 1.0
bounds = [0.0, 10.0]

[[generator.channel]]
variable = "shr_energy_tot_cali"
n_bins = 14
limits = [0.05, 1.55]
selection = "NPBDT"
preselection = "NP"
label = "NPBDT_SHR_E"
variable_tex = "Reconstructed Shower Energy (GeV)"
variable_tex_short = "$E_{\\mathrm{shr}}$"

[[generator.channel]]
variable = "shr_energy_tot_cali"
n_bins = 14
limits = [0.05, 1.55]
selection = "ZPBDT"
preselection = "ZP"
label = "ZPBDT_SHR_E"
variable_tex = "Reconstructed Shower Energy (GeV)"
variable_tex_short = "$E_{\\mathrm{shr}}$"

# Add shower angle channels to the analysis, even though
# we don't use them. This allows us to quickly make plots
# of these channels and show them post-fit.

[[generator.channel]]
variable = "cos_shr_theta"
# Irregular spacing with larger bins for small values of cos(theta), because
# statistics are very low there.
bin_edges = [-1.0, -0.5,  0.0,  0.25,  0.375,  0.5,  0.625, 0.75, 0.875, 1.0]
selection = "NPBDT"
preselection = "NP"
label = "NPBDT_SHR_COSTHETA"
variable_tex = "Reconstructed Shower $\\cos(\\theta)$"
variable_tex_short = "$\\cos(\\theta_\\mathrm{shr})$"

[[generator.channel]]
variable = "cos_shr_theta"
# Irregular spacing with larger bins for small values of cos(theta), because
# statistics are very low there.
bin_edges = [-1.0, -0.5,  0.0,  0.25,  0.375,  0.5,  0.625, 0.75, 0.875, 1.0]
selection = "ZPBDT"
preselection = "ZP"
label = "ZPBDT_SHR_COSTHETA"
variable_tex = "Reconstructed Shower $\\cos(\\theta)$"
variable_tex_short = "$\\cos(\\theta_\\mathrm{shr})$"
